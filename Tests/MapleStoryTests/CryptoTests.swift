//
//  CryptoTests.swift
//  
//
//  Created by Alsey Coleman Miller on 12/14/22.
//

import Foundation
import XCTest
@testable import MapleStory

final class CryptoTests: XCTestCase {
    
    func testEncryptedHeader() {
        
        let header: UInt32 = 0x487D4A7D
        let iv = Nonce(rawValue: 0x27568982).iv
        let length = 2
        
        let output = Packet.Encrypted.header(
            length: length,
            iv: iv,
            version: .v62
        )
        
        XCTAssertEqual(output, header, "\(output.toHexadecimal()) should equal \(header.toHexadecimal())")
    }
    
    func testMapleEncrypt() {
        
        let data: [(input: Data, output: Data)] = [
            (Data([0x11, 0x00]), Data([0x7C, 0x89])),
            (Data([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x6A, 0x01, 0x00, 0x00, 0x00, 0x4E, 0x0A, 0x00, 0x63, 0x6F, 0x6C, 0x65, 0x6D, 0x61, 0x6E, 0x63, 0x64, 0x61, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x3D, 0x0B, 0x28, 0x64, 0xC5, 0x01, 0x08, 0x00, 0x00, 0x00]),
             Data([0xFC, 0x03, 0x51, 0x73, 0xB3, 0xBB, 0xF5, 0xFE, 0xF4, 0xC2, 0xBF, 0xCA, 0xA2, 0xDF, 0x6A, 0xD2, 0x00, 0x71, 0x0D, 0x9D, 0x24, 0xBF, 0x79, 0x17, 0x9E, 0x72, 0x39, 0x34, 0xC8, 0x6D, 0x54, 0xAA, 0x68, 0x9B, 0xC2, 0x0C, 0xA5, 0xC2, 0x41, 0xB6, 0x14, 0x74, 0xA2, 0xAE, 0x48, 0x8D, 0x12, 0x8F, 0x62])
            ),
        ]
        
        for (input, output) in data {
            var encrypted = input
            Crypto.Maple.encrypt(&encrypted)
            XCTAssertEqual(encrypted, output, "\(encrypted.toHexadecimal()) should equal \(output.toHexadecimal())")
        }
    }
    
    func testMapleDecrypt() {
        
        let data: [(input: Data, output: Data)] = [
            (Data([0x0B, 0x34]), Data([0x18, 0x00])),
            (Data([0x0B, 0x09, 0x1D, 0x2B, 0xE6, 0xAD, 0x81, 0x19, 0x5E, 0x6B, 0x7B]),
             Data([0x1A, 0x00, 0x01, 0xC9, 0xFB, 0x94, 0x7C, 0x00, 0x00, 0x00, 0x00])),
            (Data([0x9A, 0x81, 0x38, 0xAD, 0x75, 0xA4, 0x8B, 0x3A, 0x28, 0x00, 0x9F, 0xF2, 0xF7, 0x53, 0x0B, 0x93, 0x14, 0x36, 0xBF, 0x60, 0x13, 0x7F, 0x24, 0xF0, 0x57, 0x97, 0xE6, 0xD1, 0x9A, 0xCE, 0xA8, 0xA0, 0x46, 0xE7, 0x35, 0xDD, 0xFA, 0x9F, 0x42, 0x95, 0x6B, 0xE9, 0x26, 0xFE, 0x69, 0x0C, 0x9D, 0x4F, 0xB1, 0x04, 0xA8, 0x37, 0xCB, 0xF1, 0x08, 0x5F, 0x06, 0xC2, 0x72, 0x4F, 0x00, 0x57, 0x31, 0x0B, 0x79, 0xFF, 0x78, 0x2B, 0x59, 0x55, 0xF6, 0x31, 0x95, 0x9F, 0xB6, 0x17, 0xD5, 0x02, 0x3C, 0xFB, 0x33, 0xC5, 0xDC, 0xB9, 0x55, 0xF5, 0xF9, 0xED, 0x9C, 0xF0, 0xC3, 0xD5, 0x36, 0x7A, 0x9D, 0xFC, 0x4E, 0xA2, 0x98, 0x76, 0x81, 0x34, 0x38, 0x5E, 0x10, 0x00, 0x10, 0x33, 0x11, 0xDA, 0xAA, 0xD6, 0xE7, 0xC9, 0xDF, 0xF4, 0xBF, 0x64, 0xC6, 0x07, 0x92, 0x64, 0xC0, 0x57, 0x32, 0x69, 0x76, 0x27, 0xE6, 0xCD, 0x61, 0xCE, 0xE7, 0x81, 0xE4, 0x25, 0x88, 0x22, 0x51, 0x28, 0xD4, 0x26, 0x14, 0x18, 0x8B, 0xFE, 0x04, 0x02, 0x33, 0xEB, 0x97, 0xE8, 0xA5, 0xEB, 0xA1, 0x6A, 0x65, 0x2A, 0x4B, 0x67, 0xCA, 0x5D, 0xCB, 0xCA, 0x5D, 0x07, 0x9E, 0x4A, 0x15, 0x0D, 0x3D, 0x13, 0xCA, 0xD6, 0x8E, 0xC0, 0xB2, 0xE5, 0x6E, 0x84, 0x7E, 0x3A, 0x2C, 0x06, 0x2A, 0xF9, 0xF9, 0x40, 0x18, 0xE1, 0xBC, 0xE3, 0x48, 0xBC, 0x03, 0xEE, 0xA7, 0x31, 0x88, 0xF3, 0x57, 0x24, 0x8D, 0xCD, 0x66, 0x4A, 0xFC, 0xE5, 0xC0, 0x7A, 0x31, 0xA0, 0x0A, 0xFF, 0x61, 0xA0, 0x9D, 0x40, 0x08, 0x39, 0x49, 0x4F, 0xA4, 0xFE, 0x8E, 0x32, 0x65, 0x7F, 0x88, 0x60, 0x1D, 0xE0, 0x16, 0xDE, 0x09, 0x8B, 0x3A, 0x56, 0x80, 0x2B, 0xB6, 0x47, 0xAA, 0xC5, 0x10, 0xAF, 0xEB, 0x89, 0xCE, 0x30, 0xDE, 0x4F, 0xE4, 0xC0, 0x55, 0x49, 0x47, 0x8A, 0x05, 0x99, 0x58, 0x28, 0x72, 0x7A, 0xE8, 0x79, 0xEA, 0x07, 0x10, 0x4D, 0xC8, 0xB1, 0x03, 0x5D, 0xC5, 0xF6, 0xA8, 0x1D, 0x5F, 0xC2, 0x19, 0xF4, 0xC7, 0x81, 0x53, 0xC5, 0xB6, 0x4C, 0x5A, 0xA2, 0x6B, 0x41, 0x74, 0x04, 0xF7, 0x44, 0x4D, 0x35, 0x88, 0x29, 0x0B, 0xEB, 0x04, 0x99, 0x40, 0x17, 0xD5, 0xAB, 0x75, 0x36, 0xD1, 0xBC, 0x29, 0x57, 0xCE, 0x1B, 0x15, 0x3E, 0x5A, 0x7A, 0x0F, 0xF9, 0x84, 0x27, 0x81, 0x87, 0x3F, 0x33, 0x7D, 0xF9, 0x2D, 0x9F, 0x3B, 0x99, 0xCB, 0xA0, 0xBC, 0x17, 0xD7, 0xF7, 0x42, 0xD5, 0x32, 0xC4, 0x1E, 0xBF, 0x0F, 0x45, 0x15, 0x16, 0x53, 0x88, 0x8B, 0x5B, 0x6C, 0xAD, 0x14, 0x27, 0x95, 0x9B, 0x4F, 0x41, 0x7B, 0x78, 0x7D, 0x10, 0xE8, 0xF6, 0xD3, 0x05, 0xC6, 0x72, 0xCC, 0xFC, 0xEA, 0x6B, 0x25, 0x5C, 0xAD, 0x96, 0xDC, 0xB5, 0x86, 0x89, 0xC2, 0xD1, 0x3D, 0x12, 0xF4, 0x0B, 0xC9, 0x16, 0xA1, 0xD3, 0x6B, 0x29, 0x31, 0xC7, 0xEF, 0xA7, 0x69, 0x6C, 0x37, 0x18, 0x75, 0xBA, 0xA1, 0xE0, 0x93, 0xEA, 0xF1, 0xE6, 0x4E, 0x24, 0x17, 0x1D, 0x76, 0x78, 0xFB, 0x1B, 0xFF, 0x76, 0x2B, 0xD9, 0xF7, 0xD6, 0xDD, 0x80, 0x2E, 0xAC, 0x8E, 0xF3, 0xDE, 0x5B, 0xF2, 0x3F, 0xA9, 0xAA, 0x61, 0x1B, 0xC3, 0x7C, 0xE6, 0xEA, 0x76, 0x26, 0xF9, 0x36, 0x5D, 0x4E, 0x30, 0x09, 0x5B, 0xB8, 0x66, 0xF2, 0x22, 0x36, 0x65, 0x58, 0xD0, 0x4A, 0xC6, 0xE4, 0x0F, 0x0F, 0x75, 0xEE, 0xD6, 0x26, 0xB7, 0xF5, 0x98, 0x3C, 0x27, 0x13, 0xBE, 0xAF, 0xBC, 0x90, 0x4A, 0x84, 0xC3, 0x45, 0x13, 0x4E, 0xBD, 0x5E, 0x27, 0x7C, 0xA2, 0x64, 0xD7, 0xDD, 0xCE, 0xCD, 0xBE, 0xE4, 0xC9, 0xAD, 0xDA, 0xB2, 0x1B, 0xD0, 0x27, 0x0F, 0x64, 0xC0, 0xCE, 0xE1, 0xF7, 0x37, 0x47, 0xF1, 0x06, 0x8B, 0x57, 0x11, 0x0C, 0x82, 0x96, 0xD0, 0x3D, 0x74, 0xFC, 0xC6, 0xA8, 0xB6, 0xEE, 0x26, 0x5C, 0xBF, 0x88, 0x41, 0xE0, 0x1E, 0x5C, 0xEE, 0x24, 0x91, 0x12, 0xE8, 0x22, 0x60, 0xC0, 0x2D, 0x3E, 0x77, 0x8C, 0x37, 0x47, 0xE2, 0x80, 0x84, 0x0E, 0xA1, 0x6F, 0xFA, 0x85, 0x77, 0x45, 0xB5, 0x2F, 0xD4, 0xB4, 0xAF, 0x61, 0xC5, 0x96, 0x6C, 0x74, 0x36, 0x39, 0xF0, 0xA9, 0xFF, 0x3C, 0x3F, 0x81, 0x46, 0xC4, 0xB1, 0x3D, 0xAC, 0xFF, 0x90, 0xFE, 0x1E, 0xE1, 0x08, 0xFF, 0x03, 0x9B, 0x60, 0x74, 0x57, 0xC2, 0xC3, 0x38, 0x68, 0xD9, 0xB0, 0x9C, 0x30, 0xAD, 0xFC, 0x1B, 0x8B, 0x41, 0x7F, 0x22, 0x99, 0xF3, 0x93, 0x7F, 0x80, 0x97, 0xA1, 0x7C, 0x6B, 0x58, 0xA2, 0xC8, 0xC3, 0x51, 0xC0, 0x68, 0xB0, 0x0F, 0x13, 0x92, 0x6A, 0x1B, 0x6B, 0xC3, 0xD5, 0xB1, 0xAC, 0xCD, 0x54, 0x40, 0x4E, 0xAC, 0xEF, 0xB6, 0xEE, 0x9F, 0x64, 0x48, 0xC3, 0x4C, 0x32, 0xE5, 0x5A, 0x63, 0x05, 0xCB, 0x74, 0x24, 0x93, 0xFF, 0xDF, 0x29, 0xA2, 0x9F, 0xD0, 0x16, 0x77, 0xDF, 0xDE, 0x11, 0x7C, 0xD2, 0x8F, 0x1E, 0x8F, 0xAE, 0xB1, 0xD7, 0xFF, 0x0E, 0x24, 0xE2, 0x58, 0xA2, 0x76, 0xE5, 0xCD, 0xA1, 0x00, 0x34, 0x0B, 0xB9, 0x30, 0x73, 0xC8, 0x26, 0x8C, 0x43, 0xA4, 0x55, 0x0E, 0x54, 0x63, 0x83, 0x0D, 0x24, 0xE4, 0xA4, 0xB1, 0xFC, 0x69, 0xF5, 0xB6, 0xBA, 0x2D, 0x54, 0xD6, 0x7E, 0x64, 0x0C, 0x6B, 0x1B, 0x5D, 0xF6, 0xDB, 0x3D, 0xBC, 0xF9, 0xA1, 0x99, 0x19, 0xB2, 0x26, 0x79, 0xFD, 0x4B, 0xC6, 0xD9, 0x54, 0x46, 0xAC, 0x58, 0x6B, 0x4C, 0x6E, 0xA5, 0x8C, 0xCB, 0x9D, 0xC2, 0xE8, 0x1E, 0x06, 0xE7, 0xE9, 0x9F, 0x2C, 0x05, 0x05, 0xAC, 0xAE, 0x46, 0x35, 0x40, 0x27, 0xF4, 0x15, 0x4F, 0x87, 0x40, 0x4A, 0xB8, 0x49, 0xEA, 0x30, 0x14, 0xD3, 0x9C, 0x1A, 0x52, 0x79, 0x6D, 0x85, 0x13, 0x5D, 0x7C, 0x09, 0x31, 0x55, 0xFD, 0x3B, 0x3C, 0x00, 0x06, 0x85, 0x92, 0x65, 0xCA, 0x09, 0x21, 0xBA, 0x51, 0x07, 0xC4, 0xD3, 0x8B, 0x24, 0xC9, 0xF0, 0xBE, 0x50, 0x35, 0x62, 0x8C, 0x88, 0x0A, 0x48, 0xD0, 0x47, 0xBF, 0xD0, 0xCE, 0x6A, 0x1E, 0x54, 0x17, 0xFD, 0x9A, 0x5C, 0x87, 0x06, 0xD1, 0x6A, 0xDF, 0x61, 0x1C, 0x90, 0x18, 0x2B, 0x89, 0xB0, 0xA6, 0xA1, 0xC7, 0xCD, 0x50, 0x9F, 0xEC, 0x79, 0x8F, 0x36, 0x56, 0x42, 0x7C, 0x33, 0x2E, 0x6D, 0x3E, 0xE6, 0xEE, 0x3F, 0x4D, 0xCB, 0x8D, 0x2F, 0xA0, 0xCE, 0x75, 0x27, 0x99, 0xAA, 0x02, 0x1F, 0xAC, 0x9F, 0xF6, 0x33, 0xC1, 0xB6, 0x06, 0x31, 0x47, 0x85, 0x0D, 0xB8, 0x32, 0x5F, 0x66, 0x1A, 0x9A, 0xB6, 0x98, 0x73, 0x31, 0xF6, 0x2C, 0x0A, 0x57, 0xC0, 0xDF, 0x50, 0x29, 0x72, 0xE2, 0x93, 0xCD, 0x53, 0xF7, 0xBC, 0x36, 0xCC, 0x36, 0x62, 0xC7, 0xCA, 0x34, 0xF1, 0x5C, 0xD5, 0x15, 0x38, 0x09, 0x07, 0xBF, 0x7A, 0x0A, 0x60, 0x64, 0xC3, 0x17, 0x9F, 0x6F, 0x3E, 0x90, 0x12, 0xD8, 0x78, 0xB9, 0x77, 0x57, 0x54, 0xDE, 0x14, 0x3F, 0x79, 0x4C, 0x22, 0xDA, 0xA1, 0x8E, 0x7F, 0x74, 0xD5, 0xBA, 0x4C, 0xF8, 0x1B, 0xEB, 0xA5, 0x7E, 0x24, 0xE7, 0x82, 0xD1, 0x50, 0xD6, 0x3E, 0xEB, 0xE5, 0x2D, 0x2C, 0xAA, 0x75, 0x99, 0xE6, 0x11, 0x6D, 0x63, 0x7E, 0x63, 0x97, 0x00, 0x9E, 0xF6, 0xC3, 0x3B, 0x0F, 0x82, 0x76, 0x03, 0xC9, 0x4C, 0x02, 0x7E, 0xD1, 0x2F, 0x20, 0xBC, 0x36, 0xA0, 0xCA, 0x26, 0x39, 0x7A, 0x93, 0x77, 0xAC, 0x03, 0x7C, 0x1C, 0x19, 0xBA, 0x66, 0xD0, 0x53, 0x7B, 0x93, 0x12, 0xEC, 0x1B, 0xB5, 0x65, 0x65, 0xD9, 0x69, 0x9D, 0x84, 0x16, 0xB3, 0x4A, 0x3B, 0xE3, 0xFF, 0xCF, 0x0D, 0x90, 0x6A, 0x28, 0xB3, 0x1F, 0xC1, 0xF4, 0x96, 0xAB, 0xCD, 0x02, 0xAC, 0xEC, 0x83, 0xC1, 0x73, 0x74, 0xA8, 0x03, 0x3E, 0xF2, 0x65, 0x0B, 0x65, 0x00, 0x4D, 0x9C, 0xA5, 0x21, 0xC3, 0x0D, 0xC1, 0x91, 0xAE, 0xA9, 0xEF, 0xAF, 0x31, 0x78, 0x3D, 0xF1, 0x83, 0x3C, 0xF0, 0x08, 0x52, 0x0E, 0xD9, 0xB8, 0x44, 0x98, 0xEE, 0x06, 0x37, 0x1E, 0x48, 0x08, 0xB5, 0xFF, 0x4D, 0x14, 0x23, 0xC5, 0x54, 0x12, 0xDF, 0xC2, 0x65, 0x2A, 0x8B, 0x7D, 0xAD, 0x11, 0xBA, 0xF3, 0xF9, 0xC2, 0xC2, 0xBD, 0x34, 0x6F, 0x96, 0x65, 0x27, 0xEC, 0x6E, 0x15, 0xAE, 0xA8, 0xDF, 0x93, 0x80, 0x42, 0x8A, 0x61, 0x7D, 0xA9, 0x0F, 0xDB, 0xD5, 0xB8, 0xE4, 0x2C, 0xE0, 0xB0, 0x57, 0x07, 0x32, 0xAA, 0x03, 0x8A, 0x2E, 0xD2, 0x6B, 0xEA, 0x3A, 0xE7, 0xE6, 0xD4, 0x9E, 0x2C, 0x35, 0x50, 0x89, 0x43, 0x92, 0xF6, 0x17, 0x32, 0x66, 0xF1, 0xFD, 0xCE, 0x40, 0x50, 0x19, 0x38, 0x4B, 0x8A, 0x8E, 0x30, 0x3D, 0xD9, 0x2F, 0x40, 0xEE, 0xC7, 0xD9, 0x4B, 0xAC, 0x55, 0xC5, 0xFF, 0x60, 0xB1, 0xDA, 0xBC, 0xF3, 0x2F, 0xC8, 0xDC, 0x2A, 0x1A, 0x6B, 0x5C, 0x22, 0x65, 0x13, 0x1C, 0x42, 0xDC, 0x1C, 0x68, 0x66, 0x92, 0x59, 0x1E, 0xEB, 0x53, 0x43, 0xAD, 0xD1, 0xD1, 0x1F, 0x6A, 0x6E, 0x2E, 0x1A, 0x88, 0xE9, 0xAC, 0x68, 0x16, 0x04, 0x9A, 0x55, 0x5B, 0x5B, 0x62, 0xDA, 0x3B, 0xD1, 0xAA, 0xE6, 0x8B, 0xCD, 0x04, 0xF2, 0x82, 0x6D, 0x9F, 0x2F, 0x2A, 0x80, 0x79, 0x2E, 0x20, 0xB2, 0x7F, 0x21, 0x67, 0x99, 0x22, 0x04, 0xD7, 0xBF, 0x25, 0xBB, 0xAA, 0xC1, 0x78, 0xE0, 0xA2, 0x94, 0x96, 0x9D, 0xC2, 0x0B, 0x53, 0xFE, 0x33, 0x2C, 0xFF, 0x42, 0x40, 0xF6, 0x32, 0x2A, 0x29, 0xD1, 0xE3, 0xA9, 0xDF, 0x78, 0xD7, 0xDB, 0xF6, 0x63, 0xD5, 0x7D, 0x88, 0x35, 0x3C, 0x55, 0x0F, 0x01, 0x10, 0xA4, 0xA2, 0x33, 0x2F, 0xE2, 0x31, 0xF5, 0x3E, 0x94, 0x08, 0x66, 0xA8, 0x34, 0x9F, 0xA7, 0x40, 0xFA, 0xA2, 0xE7, 0xF3, 0x7E, 0x7A, 0xE4, 0x11, 0x59, 0x4A, 0x40, 0xE7, 0xDA, 0x35, 0x23, 0x12, 0x77, 0x68, 0x5A, 0xA2, 0xB3, 0x2C, 0x39, 0xC8, 0x96, 0xCD, 0x17, 0x55, 0xAE, 0x29, 0x58, 0x93, 0xFF, 0x8F, 0x31, 0x25, 0xCA, 0x00, 0x19, 0xB1, 0x08, 0xD8, 0x0C, 0x87, 0xAA, 0xE4, 0x4E, 0x33, 0x36, 0xA2, 0x2D, 0x2C, 0xFF, 0x80, 0xF0, 0xA2, 0x6A, 0x19, 0x98, 0x84, 0x79, 0xEB, 0x1E, 0x1D, 0x16, 0xCE, 0x85, 0xFF, 0x27, 0x0B, 0x0B, 0x07, 0xEB, 0xDC, 0xC1, 0xEA, 0xD1, 0x4F, 0x92, 0x50, 0xCC, 0x61, 0xDF, 0x1D, 0xCC, 0xF9, 0xBA, 0xEF, 0xFC, 0xA8, 0x47, 0xDB, 0x52, 0x0F, 0x6A, 0xC6, 0xE9, 0x73, 0xC8, 0xC9, 0x32, 0x4D, 0x2B, 0x57, 0x82, 0x43, 0xB8, 0xE3, 0xD1, 0x0A, 0x6B, 0xC4, 0x20, 0x30, 0x1D, 0xDA, 0x67, 0x47, 0x48, 0xCD, 0xDC, 0x89, 0xE0, 0x88, 0x4B, 0xF9, 0x89, 0xD6, 0x01, 0x7B, 0x47, 0x61, 0xE6, 0x29, 0xB9, 0x0D, 0xBE, 0x2C, 0x1A, 0x09, 0x80, 0x35, 0x10, 0x94, 0x84, 0x3E, 0xEF, 0x4C, 0xA1, 0x99, 0xEA, 0x4F, 0xE4, 0xE1, 0x59, 0x48, 0x10, 0x8E, 0x19, 0xAE, 0xD5, 0x08, 0xF9, 0x13, 0x4C, 0xE7, 0xF2, 0x34, 0x01, 0x66, 0x3D, 0x51, 0x3F, 0xC3, 0x82, 0x45, 0xE1, 0x08, 0x7B, 0x16, 0xE7, 0xC4, 0x27, 0x25, 0xD4, 0x26, 0x95, 0x70, 0xDB, 0x0B, 0x5D, 0xB0, 0xF8, 0xC8, 0x63, 0xE6, 0x41, 0x91, 0xDE, 0x87, 0xD1, 0x8A, 0x32, 0x55, 0x74, 0x2A, 0x51, 0x9D, 0xC5, 0x08, 0xDC, 0x02, 0xC8, 0x0A, 0x26, 0x9C, 0x70, 0x87, 0xDE, 0x4C, 0xF0, 0xCB, 0x87, 0x27, 0xF5, 0x28, 0x9A, 0xF8, 0x9A, 0xD4, 0xE9, 0xE5, 0x08, 0x76, 0x66, 0xA5, 0xC1, 0x5B, 0x58, 0xD8, 0x2D, 0x19, 0x8E, 0x2C, 0x1B, 0x1E, 0x73, 0xDC, 0x28, 0x0B, 0xC0, 0x27, 0x0D, 0x2A, 0x46, 0x88, 0x77, 0x87, 0x03, 0xDD, 0x59, 0x89, 0xDD, 0x9B, 0xE6, 0x29, 0x61, 0x6C, 0xEB, 0x52, 0xD0, 0x2D, 0x0E, 0xC4, 0xA2, 0xD1, 0x5D, 0xC9, 0x7A, 0x55, 0xF5, 0x11, 0xF4, 0x7F, 0x4B, 0x11, 0x84, 0x2A, 0x1F, 0x3C, 0xB8, 0x0F, 0xC4, 0x22, 0xFE, 0x36, 0x9F, 0x0B, 0x3F, 0xEB, 0x66, 0x21, 0xBA, 0x91, 0x79, 0xDF, 0x1D, 0x8C, 0xBD, 0x9B, 0x2C, 0x93, 0x67, 0xDF, 0xFE, 0xB8, 0x16, 0xBE, 0x3C, 0x22, 0x5B, 0xBA, 0x6B, 0x12, 0x91, 0xFA, 0x88, 0x2D, 0x6D, 0x32, 0x43, 0xAA, 0x72, 0x35, 0x88, 0x33, 0x84, 0x1B, 0x9C, 0xA5, 0x62, 0xEC, 0xD1, 0x42, 0x54, 0xDA, 0x10, 0x21, 0xB4, 0x43, 0x53, 0x67, 0x9A, 0x55, 0xB6, 0x93, 0x62, 0xF7, 0x5F, 0xB0, 0xBC, 0xA1, 0x6C, 0x39, 0x01, 0x95, 0xC4, 0xF2, 0x2D, 0x9E, 0xF1, 0x52, 0x45, 0x40, 0x5F, 0x1E, 0x09, 0x41, 0x7F, 0x44, 0xE9, 0xB9, 0x82, 0xBC, 0x70, 0x72, 0x4B, 0x93, 0xC8, 0xB6, 0xD8, 0xA6, 0x3A, 0x28, 0xB8, 0x14, 0x11, 0x4A, 0xE3, 0x74, 0x76, 0xE4, 0xDD, 0x9B, 0x50, 0xDB, 0x95, 0x94, 0x28, 0x7F, 0x77, 0xCF, 0x0D, 0x49, 0x10, 0x17, 0xE3, 0xCE, 0xCE, 0xA8, 0x10, 0x03, 0x3F, 0xF7, 0xD8, 0x0C, 0x73, 0x65, 0xAB, 0x00, 0xCB, 0xB4, 0xB7, 0xEB, 0x02, 0x23, 0xD3, 0xDB, 0x7D, 0x16, 0xE3, 0x5E, 0x67, 0x14, 0xDC, 0x70, 0x37, 0x7F, 0x81, 0x5D, 0xE2, 0x90, 0x7F, 0x08, 0x89, 0x97, 0x73, 0x0D, 0x36, 0x9A, 0xF4, 0x72, 0x3F, 0x13, 0x6E, 0x4C, 0x2D, 0x69, 0x91, 0x5A, 0x90, 0x2B, 0xC2, 0x82, 0xEC, 0xEF, 0x7A, 0xF1, 0x8E, 0x6A, 0x65, 0x7E, 0xA9, 0x87, 0xAB, 0x33, 0xC9, 0x2F, 0x71, 0x59, 0x41, 0xFC, 0x32, 0x75, 0xA5, 0x5F, 0xB5, 0x67, 0x6A, 0x2F, 0x5C, 0xC7, 0xCD, 0x3C, 0x31, 0xC3, 0x2B, 0xD2, 0x2A, 0xA9, 0x4C, 0x91, 0xF7, 0xC3, 0xF7, 0x31, 0x7D, 0x95, 0x13, 0xA3, 0x8F, 0x9F, 0x3B, 0x9B, 0xD2, 0xCD, 0x1C, 0x44, 0xC9, 0xFE, 0xEC, 0xCF, 0xD7, 0xAF, 0xA9, 0x05, 0x48, 0x2C, 0x66, 0x40, 0xC5, 0x5C, 0xBF, 0xFE, 0xD8, 0xFF, 0xCA, 0x4B, 0xD3, 0x5F, 0x40, 0xB6, 0xDF, 0xFB, 0x8E, 0x27, 0x06, 0xDA, 0x67, 0x48, 0x68, 0x01, 0xE2, 0x63, 0xE9, 0x68, 0xC3, 0xBC, 0x9D, 0x79, 0x8E, 0x97, 0x28, 0xFB, 0x98, 0xBA, 0x28, 0x35, 0x79, 0x40, 0x8A, 0xAC, 0xA5, 0xA3, 0x3D, 0x19, 0x16, 0x11, 0x8D, 0x11, 0x59, 0xBD, 0x47, 0xCD, 0xB6, 0xAC, 0xDA, 0x2E, 0x47, 0x2D, 0xBE, 0xC1, 0x26, 0x3D, 0xFC, 0xD1, 0x91, 0x52, 0x19, 0xAA, 0x1D, 0x9F, 0xB3, 0xA5, 0x9B, 0x5C, 0xC1, 0x6E, 0x50, 0xF0, 0x43, 0x40, 0x71, 0x92, 0x20, 0xF6, 0x07, 0x58, 0xB9, 0xF4, 0x79, 0x2D, 0x6E, 0x2B, 0x90, 0xBB, 0xCE, 0x7E, 0x85, 0x19, 0x0B, 0xED, 0x65, 0xA9, 0x04, 0xE7, 0x6F, 0x2D, 0x40, 0x4A, 0x7C, 0x0D, 0xB4, 0x7C, 0x8B, 0xE4, 0x0B, 0xEB, 0xDC, 0x86, 0xBE, 0xF5, 0xFC, 0x60, 0xC7, 0x36, 0xD9, 0x65, 0x02, 0x9B, 0x85, 0x82, 0xFC, 0xD6, 0x61, 0xE1, 0x11, 0xA8, 0x5A, 0x79, 0xBD, 0x4B, 0x4E, 0xEC, 0xB9, 0xAF, 0x2B, 0x98, 0x42, 0x70, 0xE3, 0x3C, 0x49, 0x80, 0x52, 0x90, 0x67, 0xB7, 0x95, 0xC8, 0x01, 0x37, 0x15, 0xE9, 0x90, 0x6E, 0x33, 0xA0, 0xA2, 0x0D, 0x75, 0xCF, 0xAD, 0xE9, 0x72, 0x87, 0x23, 0x6A, 0x9A, 0x4C, 0xE5, 0x48, 0x14, 0x93, 0x27, 0xCB, 0x20, 0x05, 0x43, 0xC3, 0x49, 0xBD, 0x81, 0xC2, 0x21, 0x61, 0xA7, 0xAB, 0x8F, 0xA4, 0x81, 0x5E, 0x0C, 0xD0, 0xA1, 0x48, 0xFB, 0x30, 0xD6, 0xFC, 0x8F, 0x92, 0x7D, 0x47, 0xFC, 0xB0, 0x96, 0xFF, 0xA6, 0xE5, 0x74]),
             Data([0x19, 0x00, 0x1C, 0x08, 0x76, 0x65, 0x72, 0x2E, 0x36, 0x32, 0x20, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4E, 0x61, 0x6D, 0x65, 0x28, 0x29, 0x2C, 0x20, 0x57, 0x6F, 0x72, 0x6C, 0x64, 0x49, 0x44, 0x28, 0x2D, 0x31, 0x29, 0x2C, 0x20, 0x43, 0x68, 0x49, 0x44, 0x28, 0x2D, 0x31, 0x29, 0x0D, 0x0A, 0x3D, 0x3D, 0x3D, 0x3D, 0x20, 0x32, 0x30, 0x32, 0x32, 0x2F, 0x31, 0x32, 0x2F, 0x31, 0x36, 0x20, 0x30, 0x31, 0x3A, 0x35, 0x36, 0x3A, 0x33, 0x36, 0x2E, 0x35, 0x34, 0x34, 0x20, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x0D, 0x0A, 0x50, 0x49, 0x44, 0x28, 0x31, 0x41, 0x30, 0x34, 0x29, 0x2C, 0x20, 0x54, 0x49, 0x44, 0x28, 0x33, 0x42, 0x39, 0x43, 0x29, 0x0D, 0x0A, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x63, 0x6F, 0x64, 0x65, 0x3A, 0x20, 0x43, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x35, 0x20, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5F, 0x56, 0x49, 0x4F, 0x4C, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x0D, 0x0A, 0x46, 0x61, 0x75, 0x6C, 0x74, 0x20, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x3A, 0x20, 0x20, 0x37, 0x30, 0x37, 0x31, 0x35, 0x32, 0x39, 0x33, 0x20, 0x30, 0x31, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x34, 0x32, 0x39, 0x33, 0x0D, 0x0A, 0x4D, 0x6F, 0x64, 0x75, 0x6C, 0x65, 0x3A, 0x20, 0x43, 0x3A, 0x5C, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x5C, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4D, 0x33, 0x32, 0x5C, 0x77, 0x69, 0x6E, 0x6D, 0x6D, 0x62, 0x61, 0x73, 0x65, 0x2E, 0x64, 0x6C, 0x6C, 0x0D, 0x0A, 0x0D, 0x0A, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x3A, 0x0D, 0x0A, 0x45, 0x41, 0x58, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0D, 0x0A, 0x45, 0x42, 0x58, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0D, 0x0A, 0x45, 0x43, 0x58, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x0D, 0x0A, 0x45, 0x44, 0x58, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0D, 0x0A, 0x45, 0x53, 0x49, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0D, 0x0A, 0x45, 0x44, 0x49, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0D, 0x0A, 0x43, 0x53, 0x3A, 0x45, 0x49, 0x50, 0x3A, 0x30, 0x30, 0x31, 0x42, 0x3A, 0x37, 0x30, 0x37, 0x31, 0x35, 0x32, 0x39, 0x33, 0x0D, 0x0A, 0x53, 0x53, 0x3A, 0x45, 0x53, 0x50, 0x3A, 0x30, 0x30, 0x32, 0x33, 0x3A, 0x30, 0x30, 0x31, 0x39, 0x45, 0x42, 0x39, 0x30, 0x20, 0x20, 0x45, 0x42, 0x50, 0x3A, 0x30, 0x30, 0x31, 0x39, 0x45, 0x42, 0x41, 0x43, 0x0D, 0x0A, 0x44, 0x53, 0x3A, 0x30, 0x30, 0x32, 0x33, 0x20, 0x20, 0x45, 0x53, 0x3A, 0x30, 0x30, 0x32, 0x33, 0x20, 0x20, 0x46, 0x53, 0x3A, 0x30, 0x30, 0x33, 0x42, 0x20, 0x20, 0x47, 0x53, 0x3A, 0x30, 0x30, 0x32, 0x33, 0x0D, 0x0A, 0x46, 0x6C, 0x61, 0x67, 0x73, 0x3A, 0x30, 0x30, 0x30, 0x31, 0x30, 0x32, 0x30, 0x32, 0x0D, 0x0A, 0x44, 0x42, 0x47, 0x48, 0x45, 0x4C, 0x50, 0x2E, 0x44, 0x4C, 0x4C, 0x20, 0x6F, 0x72, 0x20, 0x69, 0x74, 0x73, 0x20, 0x65, 0x78, 0x70, 0x6F, 0x72, 0x74, 0x65, 0x64, 0x20, 0x66, 0x75, 0x6E, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x73, 0x20, 0x6E, 0x6F, 0x74, 0x20, 0x66, 0x6F, 0x75, 0x6E, 0x64, 0x0D, 0x0A, 0x0D, 0x0A, 0x43, 0x61, 0x6C, 0x6C, 0x20, 0x73, 0x74, 0x61, 0x63, 0x6B, 0x3A, 0x0D, 0x0A, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x20, 0x20, 0x46, 0x72, 0x61, 0x6D, 0x65, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4C, 0x6F, 0x67, 0x69, 0x63, 0x61, 0x6C, 0x20, 0x61, 0x64, 0x64, 0x72, 0x20, 0x20, 0x4D, 0x6F, 0x64, 0x75, 0x6C, 0x65, 0x0D, 0x0A, 0x37, 0x30, 0x37, 0x31, 0x35, 0x32, 0x39, 0x33, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x45, 0x42, 0x41, 0x43, 0x20, 0x20, 0x30, 0x30, 0x30, 0x31, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x34, 0x32, 0x39, 0x33, 0x20, 0x43, 0x3A, 0x5C, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x5C, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4D, 0x33, 0x32, 0x5C, 0x77, 0x69, 0x6E, 0x6D, 0x6D, 0x62, 0x61, 0x73, 0x65, 0x2E, 0x64, 0x6C, 0x6C, 0x0D, 0x0A, 0x37, 0x30, 0x37, 0x31, 0x35, 0x30, 0x44, 0x37, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x45, 0x43, 0x44, 0x38, 0x20, 0x20, 0x30, 0x30, 0x30, 0x31, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x34, 0x30, 0x44, 0x37, 0x20, 0x43, 0x3A, 0x5C, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x5C, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4D, 0x33, 0x32, 0x5C, 0x77, 0x69, 0x6E, 0x6D, 0x6D, 0x62, 0x61, 0x73, 0x65, 0x2E, 0x64, 0x6C, 0x6C, 0x0D, 0x0A, 0x37, 0x30, 0x37, 0x31, 0x35, 0x30, 0x33, 0x37, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x45, 0x43, 0x45, 0x43, 0x20, 0x20, 0x30, 0x30, 0x30, 0x31, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x34, 0x30, 0x33, 0x37, 0x20, 0x43, 0x3A, 0x5C, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x5C, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4D, 0x33, 0x32, 0x5C, 0x77, 0x69, 0x6E, 0x6D, 0x6D, 0x62, 0x61, 0x73, 0x65, 0x2E, 0x64, 0x6C, 0x6C, 0x0D, 0x0A, 0x37, 0x32, 0x39, 0x31, 0x33, 0x44, 0x32, 0x41, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x45, 0x45, 0x44, 0x30, 0x20, 0x20, 0x30, 0x30, 0x30, 0x31, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x32, 0x44, 0x32, 0x41, 0x20, 0x43, 0x3A, 0x5C, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x5C, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4D, 0x33, 0x32, 0x5C, 0x4D, 0x53, 0x41, 0x43, 0x4D, 0x33, 0x32, 0x2E, 0x64, 0x6C, 0x6C, 0x0D, 0x0A, 0x37, 0x32, 0x39, 0x31, 0x33, 0x41, 0x37, 0x45, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x46, 0x31, 0x43, 0x30, 0x20, 0x20, 0x30, 0x30, 0x30, 0x31, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x32, 0x41, 0x37, 0x45, 0x20, 0x43, 0x3A, 0x5C, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x5C, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4D, 0x33, 0x32, 0x5C, 0x4D, 0x53, 0x41, 0x43, 0x4D, 0x33, 0x32, 0x2E, 0x64, 0x6C, 0x6C, 0x0D, 0x0A, 0x37, 0x32, 0x39, 0x31, 0x33, 0x35, 0x30, 0x36, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x46, 0x31, 0x46, 0x38, 0x20, 0x20, 0x30, 0x30, 0x30, 0x31, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x32, 0x35, 0x30, 0x36, 0x20, 0x43, 0x3A, 0x5C, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x5C, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4D, 0x33, 0x32, 0x5C, 0x4D, 0x53, 0x41, 0x43, 0x4D, 0x33, 0x32, 0x2E, 0x64, 0x6C, 0x6C, 0x0D, 0x0A, 0x37, 0x32, 0x39, 0x31, 0x32, 0x45, 0x39, 0x32, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x46, 0x32, 0x31, 0x38, 0x20, 0x20, 0x30, 0x30, 0x30, 0x31, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x31, 0x45, 0x39, 0x32, 0x20, 0x43, 0x3A, 0x5C, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x5C, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4D, 0x33, 0x32, 0x5C, 0x4D, 0x53, 0x41, 0x43, 0x4D, 0x33, 0x32, 0x2E, 0x64, 0x6C, 0x6C, 0x0D, 0x0A, 0x37, 0x32, 0x39, 0x31, 0x32, 0x43, 0x39, 0x37, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x46, 0x32, 0x33, 0x43, 0x20, 0x20, 0x30, 0x30, 0x30, 0x31, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x31, 0x43, 0x39, 0x37, 0x20, 0x43, 0x3A, 0x5C, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x5C, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4D, 0x33, 0x32, 0x5C, 0x4D, 0x53, 0x41, 0x43, 0x4D, 0x33, 0x32, 0x2E, 0x64, 0x6C, 0x6C, 0x0D, 0x0A, 0x37, 0x32, 0x39, 0x31, 0x37, 0x37, 0x41, 0x35, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x46, 0x33, 0x38, 0x34, 0x20, 0x20, 0x30, 0x30, 0x30, 0x31, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x36, 0x37, 0x41, 0x35, 0x20, 0x43, 0x3A, 0x5C, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x5C, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4D, 0x33, 0x32, 0x5C, 0x4D, 0x53, 0x41, 0x43, 0x4D, 0x33, 0x32, 0x2E, 0x64, 0x6C, 0x6C, 0x0D, 0x0A, 0x35, 0x31, 0x38, 0x30, 0x34, 0x36, 0x34, 0x30, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x46, 0x35, 0x46, 0x43, 0x20, 0x20, 0x30, 0x30, 0x30, 0x31, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x33, 0x36, 0x34, 0x30, 0x20, 0x43, 0x3A, 0x5C, 0x4E, 0x65, 0x78, 0x6F, 0x6E, 0x5C, 0x4D, 0x61, 0x70, 0x6C, 0x65, 0x53, 0x74, 0x6F, 0x72, 0x79, 0x36, 0x32, 0x5C, 0x53, 0x4F, 0x55, 0x4E, 0x44, 0x5F, 0x44, 0x58, 0x38, 0x2E, 0x44, 0x4C, 0x4C, 0x0D, 0x0A, 0x35, 0x31, 0x38, 0x30, 0x34, 0x31, 0x34, 0x32, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x46, 0x36, 0x36, 0x30, 0x20, 0x20, 0x30, 0x30, 0x30, 0x31, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x33, 0x31, 0x34, 0x32, 0x20, 0x43, 0x3A, 0x5C, 0x4E, 0x65, 0x78, 0x6F, 0x6E, 0x5C, 0x4D, 0x61, 0x70, 0x6C, 0x65, 0x53, 0x74, 0x6F, 0x72, 0x79, 0x36, 0x32, 0x5C, 0x53, 0x4F, 0x55, 0x4E, 0x44, 0x5F, 0x44, 0x58, 0x38, 0x2E, 0x44, 0x4C, 0x4C, 0x0D, 0x0A, 0x35, 0x31, 0x38, 0x30, 0x33, 0x41, 0x37, 0x39, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x46, 0x36, 0x39, 0x38, 0x20, 0x20, 0x30, 0x30, 0x30, 0x31, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x32, 0x41, 0x37, 0x39, 0x20, 0x43, 0x3A, 0x5C, 0x4E, 0x65, 0x78, 0x6F, 0x6E, 0x5C, 0x4D, 0x61, 0x70, 0x6C, 0x65, 0x53, 0x74, 0x6F, 0x72, 0x79, 0x36, 0x32, 0x5C, 0x53, 0x4F, 0x55, 0x4E, 0x44, 0x5F, 0x44, 0x58, 0x38, 0x2E, 0x44, 0x4C, 0x4C, 0x0D, 0x0A, 0x30, 0x30, 0x38, 0x32, 0x38, 0x43, 0x32, 0x41, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x46, 0x37, 0x34, 0x43, 0x20, 0x20, 0x30, 0x30, 0x30, 0x31, 0x3A, 0x30, 0x30, 0x34, 0x32, 0x37, 0x43, 0x32, 0x41, 0x20, 0x43, 0x3A, 0x5C, 0x4E, 0x65, 0x78, 0x6F, 0x6E, 0x5C, 0x4D, 0x61, 0x70, 0x6C, 0x65, 0x53, 0x74, 0x6F, 0x72, 0x79, 0x36, 0x32, 0x5C, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x68, 0x6F, 0x73, 0x74, 0x2E, 0x65, 0x78, 0x65, 0x0D, 0x0A, 0x30, 0x30, 0x38, 0x32, 0x37, 0x41, 0x30, 0x31, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x46, 0x37, 0x37, 0x43, 0x20, 0x20, 0x30, 0x30, 0x30, 0x31, 0x3A, 0x30, 0x30, 0x34, 0x32, 0x36, 0x41, 0x30, 0x31, 0x20, 0x43, 0x3A, 0x5C, 0x4E, 0x65, 0x78, 0x6F, 0x6E, 0x5C, 0x4D, 0x61, 0x70, 0x6C, 0x65, 0x53, 0x74, 0x6F, 0x72, 0x79, 0x36, 0x32, 0x5C, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x68, 0x6F, 0x73, 0x74, 0x2E, 0x65, 0x78, 0x65, 0x0D, 0x0A, 0x30, 0x30, 0x38, 0x32, 0x36, 0x33, 0x35, 0x43, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x46, 0x41, 0x34, 0x38, 0x20, 0x20, 0x30, 0x30, 0x30, 0x31, 0x3A, 0x30, 0x30, 0x34, 0x32, 0x35, 0x33, 0x35, 0x43, 0x20, 0x43, 0x3A, 0x5C, 0x4E, 0x65, 0x78, 0x6F, 0x6E, 0x5C, 0x4D, 0x61, 0x70, 0x6C, 0x65, 0x53, 0x74, 0x6F, 0x72, 0x79, 0x36, 0x32, 0x5C, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x68, 0x6F, 0x73, 0x74, 0x2E, 0x65, 0x78, 0x65, 0x0D, 0x0A, 0x30, 0x30, 0x38, 0x32, 0x33, 0x36, 0x38, 0x37, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x46, 0x45, 0x34, 0x43, 0x20, 0x20, 0x30, 0x30, 0x30, 0x31, 0x3A, 0x30, 0x30, 0x34, 0x32, 0x32, 0x36, 0x38, 0x37, 0x20, 0x43, 0x3A, 0x5C, 0x4E, 0x65, 0x78, 0x6F, 0x6E, 0x5C, 0x4D, 0x61, 0x70, 0x6C, 0x65, 0x53, 0x74, 0x6F, 0x72, 0x79, 0x36, 0x32, 0x5C, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x68, 0x6F, 0x73, 0x74, 0x2E, 0x65, 0x78, 0x65, 0x0D, 0x0A, 0x30, 0x30, 0x38, 0x37, 0x43, 0x41, 0x42, 0x46, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x46, 0x45, 0x44, 0x38, 0x20, 0x20, 0x30, 0x30, 0x30, 0x31, 0x3A, 0x30, 0x30, 0x34, 0x37, 0x42, 0x41, 0x42, 0x46, 0x20, 0x43, 0x3A, 0x5C, 0x4E, 0x65, 0x78, 0x6F, 0x6E, 0x5C, 0x4D, 0x61, 0x70, 0x6C, 0x65, 0x53, 0x74, 0x6F, 0x72, 0x79, 0x36, 0x32, 0x5C, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x68, 0x6F, 0x73, 0x74, 0x2E, 0x65, 0x78, 0x65, 0x0D, 0x0A, 0x37, 0x35, 0x43, 0x32, 0x42, 0x31, 0x43, 0x38, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x46, 0x45, 0x46, 0x30, 0x20, 0x20, 0x30, 0x30, 0x30, 0x32, 0x3A, 0x30, 0x30, 0x30, 0x41, 0x34, 0x31, 0x43, 0x38, 0x20, 0x43, 0x3A, 0x5C, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x5C, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x33, 0x32, 0x5C, 0x4B, 0x45, 0x52, 0x4E, 0x45, 0x4C, 0x33, 0x32, 0x2E, 0x44, 0x4C, 0x4C, 0x0D, 0x0A, 0x37, 0x35, 0x42, 0x38, 0x45, 0x44, 0x39, 0x43, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x46, 0x46, 0x35, 0x30, 0x20, 0x20, 0x30, 0x30, 0x30, 0x32, 0x3A, 0x30, 0x30, 0x30, 0x30, 0x37, 0x44, 0x39, 0x43, 0x20, 0x43, 0x3A, 0x5C, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x5C, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x33, 0x32, 0x5C, 0x4B, 0x45, 0x52, 0x4E, 0x45, 0x4C, 0x33, 0x32, 0x2E, 0x44, 0x4C, 0x4C, 0x0D, 0x0A, 0x37, 0x37, 0x30, 0x34, 0x39, 0x32, 0x39, 0x30, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x46, 0x46, 0x36, 0x30, 0x20, 0x20, 0x30, 0x30, 0x30, 0x32, 0x3A, 0x30, 0x30, 0x30, 0x38, 0x32, 0x32, 0x39, 0x30, 0x20, 0x43, 0x3A, 0x5C, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x5C, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4D, 0x33, 0x32, 0x5C, 0x6E, 0x74, 0x64, 0x6C, 0x6C, 0x2E, 0x64, 0x6C, 0x6C, 0x0D, 0x0A, 0x37, 0x37, 0x30, 0x34, 0x39, 0x31, 0x46, 0x38, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x46, 0x46, 0x42, 0x30, 0x20, 0x20, 0x30, 0x30, 0x30, 0x32, 0x3A, 0x30, 0x30, 0x30, 0x38, 0x32, 0x31, 0x46, 0x38, 0x20, 0x43, 0x3A, 0x5C, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x5C, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4D, 0x33, 0x32, 0x5C, 0x6E, 0x74, 0x64, 0x6C, 0x6C, 0x2E, 0x64, 0x6C, 0x6C, 0x0D, 0x0A, 0x37, 0x37, 0x31, 0x30, 0x37, 0x30, 0x46, 0x43, 0x20, 0x20, 0x30, 0x30, 0x31, 0x39, 0x46, 0x46, 0x45, 0x30, 0x20, 0x20, 0x30, 0x30, 0x30, 0x32, 0x3A, 0x30, 0x30, 0x31, 0x34, 0x30, 0x30, 0x46, 0x43, 0x20, 0x43, 0x3A, 0x5C, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x5C, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4D, 0x33, 0x32, 0x5C, 0x6E, 0x74, 0x64, 0x6C, 0x6C, 0x2E, 0x64, 0x6C, 0x6C, 0x0D, 0x0A])
            ),
            
        ]
        
        for (input, output) in data {
            var decrypted = input
            Crypto.Maple.decrypt(&decrypted)
            XCTAssertEqual(decrypted, output, "\(decrypted.toHexadecimal()) should equal \(output.toHexadecimal())")
        }
    }
    
    func testAESEncrypt() throws {
        
        let output = Data([0xDD, 0x99, 0x1D, 0xD7, 0x2F, 0xB1, 0xA3, 0x0F, 0x01, 0xA1, 0x0E, 0xA9, 0x6A, 0x15, 0xEA, 0x4C, 0x09, 0x57, 0x1D, 0x41, 0x9E, 0x2E, 0x1B, 0x57, 0xD8, 0x6D, 0x43, 0xC6, 0xDA, 0xE3, 0x9B, 0x07, 0x55, 0xFC, 0x62, 0x60, 0x83, 0x55, 0x65, 0x60, 0x2E, 0xA8, 0x42, 0x7B, 0x22, 0x60, 0x8F, 0xD0, 0xC4])
        
        let input = Data([0x1A, 0xDC, 0x06, 0x9A, 0xC3, 0x0C, 0xE1, 0x09, 0x15, 0x5C, 0xDB, 0xC9, 0x8F, 0xAC, 0xC7, 0x92, 0x1D, 0xBC, 0xA1, 0xDC, 0x52, 0x66, 0xF6, 0xEA, 0x8E, 0x86, 0xD2, 0xFF, 0xF3, 0x60, 0x43, 0x26, 0xCC, 0x8A, 0xAD, 0x51, 0x6D, 0xE8, 0x50, 0x10, 0x01, 0xE7, 0x8C, 0xD8, 0xF1, 0x1F, 0xD8, 0xF9, 0x00])
        
        let key = Data([0x13, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xB4, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00])
        
        // 0xFC, 0x7D, 0xC3, 0x40
        let iv = Data([0xFC, 0x7D, 0xC3, 0x40, 0xFC, 0x7D, 0xC3, 0x40, 0xFC, 0x7D, 0xC3, 0x40, 0xFC, 0x7D, 0xC3, 0x40])
        
        let encrypted = try Crypto.AES.encrypt(input, key: Key(key), iv: iv)
        
        XCTAssertEqual(encrypted, output, "\(encrypted.toHexadecimal()) should equal \(output.toHexadecimal())")
    }
    
    func testAESDecrypt() throws {
        
        let input = Data([0xDD, 0x99, 0x1D, 0xD7, 0x2F, 0xB1, 0xA3, 0x0F, 0x01, 0xA1, 0x0E, 0xA9, 0x6A, 0x15, 0xEA, 0x4C, 0x09, 0x57, 0x1D, 0x41, 0x9E, 0x2E, 0x1B, 0x57, 0xD8, 0x6D, 0x43, 0xC6, 0xDA, 0xE3, 0x9B, 0x07, 0x55, 0xFC, 0x62, 0x60, 0x83, 0x55, 0x65, 0x60, 0x2E, 0xA8, 0x42, 0x7B, 0x22, 0x60, 0x8F, 0xD0, 0xC4])
        
        let output = Data([0x1A, 0xDC, 0x06, 0x9A, 0xC3, 0x0C, 0xE1, 0x09, 0x15, 0x5C, 0xDB, 0xC9, 0x8F, 0xAC, 0xC7, 0x92, 0x1D, 0xBC, 0xA1, 0xDC, 0x52, 0x66, 0xF6, 0xEA, 0x8E, 0x86, 0xD2, 0xFF, 0xF3, 0x60, 0x43, 0x26, 0xCC, 0x8A, 0xAD, 0x51, 0x6D, 0xE8, 0x50, 0x10, 0x01, 0xE7, 0x8C, 0xD8, 0xF1, 0x1F, 0xD8, 0xF9, 0x00])
        
        let key = Data([0x13, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xB4, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00])
        
        // 0xFC, 0x7D, 0xC3, 0x40
        let iv = Data([0xFC, 0x7D, 0xC3, 0x40, 0xFC, 0x7D, 0xC3, 0x40, 0xFC, 0x7D, 0xC3, 0x40, 0xFC, 0x7D, 0xC3, 0x40])
        
        let decrypted = try Crypto.AES.decrypt(input, key: Key(key), iv: iv)
        
        XCTAssertEqual(decrypted, output, "\(decrypted.toHexadecimal()) should equal \(output.toHexadecimal())")
    }
}
